ARG ROS_DISTRIBUTION
FROM ros:$ROS_DISTRIBUTION-ros-base

LABEL mantainer="chiragmakwana02@gmail.com"

SHELL ["/bin/bash","-c"]
# Install ROS Packages
RUN apt-get update && apt-get install -y --no-install-recommends \
    git \
    python-pip \
    python-setuptools \
    python-dev \
    && rm -rf /var/lib/apt/lists/*

RUN git clone --progress --verbose https://github.com/chiragmakwana0296/ardupilot.git
WORKDIR /ardupilot
RUN git submodule update --init --recursive

# ROS workspace
# ARG BUILD_TYPE
# ENV BUILD_ENV=${BUILD_TYPE}
# ENV CATKIN_WS=/root/catkin_ws
# RUN mkdir -p $CATKIN_WS/src
# WORKDIR $CATKIN_WS/src
# COPY ./src .

# build and install packages
# RUN if [ ${BUILD_ENV} = "install" ]; \
#         then source /opt/ros/$ROS_DISTRO/setup.bash \
#             && apt-get update \
#             && cd $CATKIN_WS \
#             && rosdep install -y --from-paths . --ignore-src --rosdistro $ROS_DISTRO \
#             && catkin_make_isolated --install -DCMAKE_BUILD_TYPE=Release --install-space /opt/ros/$ROS_DISTRO \
#             && rm -R src ; \
#     elif [ $BUILD_ENV = "devel" ]; \
#         then source /opt/ros/$ROS_DISTRO/setup.bash \
#             && apt-get update \
#             && cd $CATKIN_WS \
#             && rosdep install -y --from-paths . --ignore-src --rosdistro $ROS_DISTRO \
#             && catkin_make ; \
#     else echo "Please select build types: [install/devel]" ; \
#     fi

# COPY ./scripts/entrypoint.sh /
# COPY ./scripts/ros-app.launch /

EXPOSE 11311
EXPOSE 19997

# ENTRYPOINT ["/entrypoint.sh"]

